#include <stdio.h>
#include <stdbool.h>
#define MAX_VERTICES 20
void printDetails() {
    printf("Name : P. Koteswara Rao\n");
    printf("Reg no : 192211581\n");
}
bool isSafe(int v, int graph[MAX_VERTICES][MAX_VERTICES], int path[], int pos, int V) {
    if (graph[path[pos - 1]][v] == 0) {
        return false;
    }
    for (int i = 0; i < pos; i++) {
        if (path[i] == v) {
            return false;
        }
    }
    return true;
}
bool hamCycleUtil(int graph[MAX_VERTICES][MAX_VERTICES], int path[], int pos, int V) {
    if (pos == V) {
        return (graph[path[pos - 1]][path[0]] == 1);
    }
    for (int v = 1; v < V; v++) {
        if (isSafe(v, graph, path, pos, V)) {
            path[pos] = v;
            if (hamCycleUtil(graph, path, pos + 1, V)) {
                return true;
            }
            path[pos] = -1;
        }
    }
    return false;
}
void printSolution(int path[], int V) {
    printf("Hamiltonian Circuit: ");
    for (int i = 0; i < V; i++) {
        printf("%d ", path[i]);
    }
    printf("%d\n", path[0]); 
}
void findHamiltonianCircuit(int graph[MAX_VERTICES][MAX_VERTICES], int V) {
    int path[MAX_VERTICES];
    for (int i = 0; i < V; i++) {
        path[i] = -1;
    }
    path[0] = 0;
    if (!hamCycleUtil(graph, path, 1, V)) {
        printf("No Hamiltonian Circuit found.\n");
    } else {
        printSolution(path, V);
    }
}
int main() {
    int graph[MAX_VERTICES][MAX_VERTICES];
    int V;
    printDetails();
    printf("Enter the number of vertices: ");
    scanf("%d", &V);
    printf("Enter the adjacency matrix (use 1 for edge and 0 for no edge):\n");
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            scanf("%d", &graph[i][j]);
        }
    }
    findHamiltonianCircuit(graph, V);
    return 0;
}
