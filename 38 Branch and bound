#include <stdio.h>
#include <limits.h>
#define MAX_N 10
void printDetails() {
    printf("Name : P. Koteswara Rao\n");
    printf("Reg no : 192211581\n");
}
int minCost(int cost[MAX_N][MAX_N], int n);
void branchAndBound(int cost[MAX_N][MAX_N], int n);
typedef struct {
    int u, v;
} Assignment;
void branchAndBoundUtil(int cost[MAX_N][MAX_N], int n, int level, int currCost, int assigned[MAX_N], int *minCost, Assignment result[MAX_N]) {
    if (level == n) {
        if (currCost < *minCost) {
            *minCost = currCost;
            for (int i = 0; i < n; i++) {
                result[i].u = i;
                result[i].v = assigned[i];
            }
        }
        return;
    }
    for (int i = 0; i < n; i++) {
        if (!assigned[i]) {
            assigned[level] = i;
            branchAndBoundUtil(cost, n, level + 1, currCost + cost[level][i], assigned, minCost, result);
            assigned[level] = -1;
        }
    }
}
void branchAndBound(int cost[MAX_N][MAX_N], int n) {
    int minCost = INT_MAX;
    Assignment result[MAX_N];
    int assigned[MAX_N];

    for (int i = 0; i < n; i++) {
        assigned[i] = -1;
    }
    branchAndBoundUtil(cost, n, 0, 0, assigned, &minCost, result);
    printf("Minimum cost: %d\n", minCost);
    printf("Assignments:\n");
    for (int i = 0; i < n; i++) {
        printf("Task %d -> Agent %d\n", result[i].u + 1, result[i].v + 1);
    }
}
int main() {
    int cost[MAX_N][MAX_N];
    int n;
    printDetails();
    printf("Enter the number of tasks/agents: ");
    scanf("%d", &n);
    printf("Enter the cost matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }
    branchAndBound(cost, n);
    return 0;
}
